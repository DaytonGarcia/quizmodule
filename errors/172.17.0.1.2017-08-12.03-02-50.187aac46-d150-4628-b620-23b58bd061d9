(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> cannot concatenate 'str' and 'NoneType' objects"
p3
sS'layer'
p4
S'/opt/web-apps/web2py/applications/cpfecys/controllers/quiz.py'
p5
sS'code'
p6
S'@auth.requires_login()\n@auth.requires(auth.has_membership(\'Student\') or auth.has_membership(\'Teacher\') or auth.has_membership(\'Super-Administrator\') or auth.has_membership(\'Academic\') or auth.has_membership(\'Ecys-Administrator\'))\n\ndef home_quiz():\n    area = db(db.area_level.name==\'DTT Tutor Acad\xc3\xa9mico\').select().first()\n    ecys_var=False\n    if request.vars[\'ecys\'] == "True":\n        ecys_var=True\n    import cpfecys\n    period = cpfecys.current_year_period()\n    periodo = request.vars[\'period\']\n    project = request.vars[\'project\']\n    #project = db(db.project.id==idproject).select().first()  \n    return dict(ecys_var = ecys_var, periodo = period, course=project, period=periodo)\n\ndef create_quiz():\n    #session.attachment_list = []\n    #session.attachment_list_temp = []\n    #session.attachment_list_temp2 = []\n    #session.notification_subject = \'\'\n    #session.notification_message = \'\'\n    area = db(db.area_level.name==\'DTT Tutor Acad\xc3\xa9mico\').select().first()\n    #coursesAdmin = None\n    #countcoursesAdmin = db.user_project.id.count()\n    #countcoursesAdminT = 0\n    #coursesStudent = None\n    #countcoursesStudent = db.academic_course_assignation.id.count()\n    #coursesStudentT = 0\n    ecys_var=False\n    if request.vars[\'ecys\'] == "True":\n        ecys_var=True\n    import cpfecys\n    #Obtain the current period of the system and all the register periods\n    period = cpfecys.current_year_period()\n    idperiodoc = request.vars[\'period\']\n    idproject = request.vars[\'project\']\n    project = db(db.project.id==idproject).select().first()  \n    idPregunta = 1;\n    return dict(ecys_var = ecys_var, periodo = period, idPregunta = idPregunta, project=project, idperiodoc=idperiodoc, idproject=idproject)\n\ndef consult_quiz():\n    area = db(db.area_level.name==\'DTT Tutor Acad\xc3\xa9mico\').select().first()\n    ecys_var=False\n    if request.vars[\'ecys\'] == "True":\n        ecys_var=True\n    import cpfecys\n    #Obtain the current period of the system and all the register periods\n    period = cpfecys.current_year_period()\n    idperiodoc = request.vars[\'period\']\n    idproject = request.vars[\'project\']\n    project = db(db.project.id==idproject).select().first()  \n    userid = auth.user.id\n    cursoid = project.project_id\n    cadena = \'uid:\'+str(userid)+\':curso:\'+str(cursoid)+\':quiz:*\'\n    import redis\n    r = redis.StrictRedis();\n    a = r.keys(cadena);\n    return dict(ecys_var = ecys_var, periodo = period, project=project, idperiodoc=idperiodoc, idproject=idproject,a=a)\n\ndef consultar_quiz():\n    area = db(db.area_level.name==\'DTT Tutor Acad\xc3\xa9mico\').select().first()\n    ecys_var=False\n    if request.vars[\'ecys\'] == "True":\n        ecys_var=True\n    import cpfecys\n    period = cpfecys.current_year_period()\n    idperiodoc = request.vars[\'period\']\n    idproject = request.vars[\'project\']\n    project = db(db.project.id==idproject).select().first()  \n    idPregunta = 1;\n    return dict(ecys_var = ecys_var, periodo = period, project=project)\n\n@auth.requires_login()\ndef aumentarPregunta():\n    idQuestion += 1;\n    return idQuestion;\n\n@auth.requires_login()\ndef obtenerQuiz():\n    import redis\n    r = redis.StrictRedis(host=\'127.0.0.1\', port=6379, db=0);\n    r.incr("idquiz");\n    idq = \'{"value":"\'+r.get("idquiz")+\'"}\';\n    return idq;\n\n@auth.requires_login()\ndef GuardarQuiz():\n    print \'Hola\'\n    import redis\n    r = redis.StrictRedis(host=\'127.0.0.1\', port=6379, db=0);\n    ide = request.vars[\'id\']\n    preguntas = request.vars[\'jsonquiz\']\n    curso = request.vars[\'project\']\n    uid = request.vars[\'uid\']\n    a = r.hset("uid:"+uid+":curso:"+curso+":quiz:"+ide,"preguntas",preguntas);\n    r.hset("uid:"+uid+":curso:"+curso+":quiz:"+ide,"ejecuciones",0);\n    r.hset("uid:"+uid+":curso:"+curso+":quiz:"+ide,"ganados",0);\n    r.hset("uid:"+uid+":curso:"+curso+":quiz:"+ide,"perdidos",0);\n    r.hset("uid:"+uid+":curso:"+curso+":quiz:"+ide,"state",0);\n\n    return a;\n\ndef GetQuiz():\n    import redis\n    r = redis.StrictRedis();\n    a = r.get(34);\n    return a;\n\n@auth.requires_login()\ndef take_quiz():\n    import cpfecys\n    period = cpfecys.current_year_period()\n    periodo = request.vars[\'period\']\n    project = request.vars[\'project\']\n    #project = db(db.project.id==idproject).select().first()  \n    return dict(periodo = period, course=project, period=periodo)\n\n@auth.requires_login()\ndef reportes():\n    import cpfecys\n    period = cpfecys.current_year_period()\n    periodo = request.vars[\'period\']\n    project = request.vars[\'project\']\n    #project = db(db.project.id==idproject).select().first()  \n    return dict(periodo = period, course=project, period=periodo)\n\n@auth.requires_login()\ndef view_reports():\n    import cpfecys\n    period = cpfecys.current_year_period()\n    periodo = \'3\'\n    project = \'93\'\n    #project = db(db.project.id==idproject).select().first()  \n    return dict(periodo = period, course=project, period=periodo)\n\n@auth.requires_login()\ndef viewer_quiz():\n    import cpfecys\n    period = cpfecys.current_year_period()\n    periodo = \'3\'\n    project = \'93\'\n    #project = db(db.project.id==idproject).select().first()  \n    return dict(periodo = period, course=project, period=periodo)\n\ndef viewer_quiz2():\n    import cpfecys\n    period = cpfecys.current_year_period()\n    periodo = \'3\'\n    project = \'93\'\n    #project = db(db.project.id==idproject).select().first()  \n    return dict(periodo = period, course=project, period=periodo)\n\ndef viewer_quiz3():\n    import cpfecys\n    period = cpfecys.current_year_period()\n    periodo = \'3\'\n    project = \'93\'\n    #project = db(db.project.id==idproject).select().first()  \n    return dict(periodo = period, course=project, period=periodo)\nresponse._vars=response._caller(GuardarQuiz)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/opt/web-apps/web2py/gluon/restricted.py", line 220, in restricted\n    exec ccode in environment\n  File "/opt/web-apps/web2py/applications/cpfecys/controllers/quiz.py", line 160, in <module>\n  File "/opt/web-apps/web2py/gluon/globals.py", line 385, in <lambda>\n    self._caller = lambda f: f()\n  File "/opt/web-apps/web2py/gluon/tools.py", line 3287, in f\n    return action(*a, **b)\n  File "/opt/web-apps/web2py/applications/cpfecys/controllers/quiz.py", line 95, in GuardarQuiz\n    a = r.hset("uid:"+uid+":curso:"+curso+":quiz:"+ide,"preguntas",preguntas);\nTypeError: cannot concatenate \'str\' and \'NoneType\' objects\n'
p11
s.